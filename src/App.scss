//Setting some values for colors and backgrounds here to be used below
$blue: #38bcdb !global;
$blue-hover: #2e91a3 !global;
$grey: #a9aaab !global;
$light-grey: #dcdcdc !global;
// $code-background: url("../images/code_Dialword.jpg");
// $data-background: url("../images/data_Dialword.jpg");
// $faq-background: url("../images/faq.jpg");
// $about-background: url("../images/about.jpg");
// $featuring-background: url("../images/featuring.jpg");
// $mobile-code-background: url("../images/mobile/code_mobile_Dialword.jpg");
// $mobile-data-background: url("../images/mobile/data_mobile_Dialword.jpg");
// $mobile-about-background: url("../images/mobile/about_mobile.jpg");
// $mobile-faq-background: url("../images/mobile/faq_mobile.jpg");
// $mobile-featuring-background: url("../images/mobile/featuring_mobile.jpg");



.App {
  // background-image:url("https://image.freepik.com/free-vector/business-background-design_1300-345.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: top center;
  // height: 800px;
  width: 100%;
  margin: 0;
  padding: 0;
  color: black;
  text-align: center;
}
@mixin carousel-animation($frames, $static, $animation-name: 'carousel'){
  @if unitless($static){
    $static: percentage($static);
  }

  $animating: (100% - $frames * $static)/ ($frames - 1);

  @at-root{
    @keyframes #{$animation-name} {
      @for $i from 0 to $frames {
        $current-frame: $i * $static + $i * $animating;
        $next-frame: ($i + 1) * $static + $i * $animating;
        $halfway-frame: $i * $static / 1% + ($i - 1) * $animating + $animating / 2;

        @if $i > 0 {
          #{$halfway-frame}{
            filter: blur(2px);
          }

        }
        #{$current-frame, $next-frame}{
          transform: translateX($i * -100% / $frames);
          filter: blur(0);
        }
      }
    }
  }
}

.App {
  font-family: 'Roboto';
}
//Setting the backgrounds based on screen width, later on I used aspect ratio almost exclusively
// I might return to this @media setting instead
#Dialword_code {
  // background-image: $mobile-code-background;
  background-color: grey;
  @media screen and (min-width: 800px) {
    // background-image: $code-background;
    background-color: grey;
  }
}
#Dialword_data {
  // background-image: $mobile-data-background;
  background-color: grey;
  @media screen and (min-width: 800px) {
    // background-image: $data-background;
    background-color: grey;
  }
}


//Set the Dialword component up to be a flex container and Dialword mobile container to not be displayed
.Dialword {
  background-size: cover;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
}
.Dialword-Mobile {
  display: none;
}

#Dialword_mobile_code {
  background-size: cover;
  // background-image: $mobile-data-background;
  background-color: grey;
}
 //Here the header and Headings are placed in order and sized accordingly
.Header {
  order:1;
  height: 7vmax;
  width: 100vmax;
  background-color: rgba(0,0,0,.8);
  img {
    left: 5;
    position: absolute;
    height: 5vmax;
    margin-left: 5vmax;
    margin-bottom: 1vmax;
    padding: 1vmax;
  }
  p {
    font-family: 'Roboto';
    font-style: normal;
    right: 0;
    width: 30vmax;
    font-size: .9vmax;
    color: #dcdcdc;
    position: absolute;
    text-align:right;
    padding-right: 2vmax;
    padding-top: 2vmax;
    a {
      color: #38bcbd;
    }
  }
}

.Learn-Head {
  order: 2;
  font-family: 'Roboto';
  font-weight: bold;
  color: black;
  width: 25vmax;
  margin-left: 4vmax;
  margin-top: 3vmax;
  text-align: left;
  padding: 10px;
  h1 {
    font-size: 4vw;
    font-weight: bold;
    margin-bottom:0;
  }
  p {
    font-size: 2vw;
    margin-top: 0;
    font-family: 'Roboto Slab';
    font-weight: lighter;
  }
}

.Top-Content {
  order: 3;
  width: 28vmax;
  margin-right: 7vmax;
  margin-top: 3vmax;
  text-align: right;
  h2 {
    font-size: 1.7vmax;
    color: #38bcbd;
    margin-bottom: .3vw;
  }
  p {
    color: white;
    font-size: 1.2vw;
    font-weight: 200;
    margin-bottom: 0;
    margin-top: 0;
    border-bottom: solid $blue-hover thick;
  }
  h1 {
    color: #38bcbd;
    font-style: oblique;
    margin-top: 0;
  }
}

//I change the content of these using the function from Dialword Content but there is a flash, if I had more time I'd like to
//to set the content to move up and change color. But I would also like some more clarification on what was being asked for here.
//The instructions were not clear if there was supposed to be a transition effect where the content litterally moves up
//or if the content can just be switched out. Also it wasn't specified where the style changes were supposed to take effect



.Bottom-Content {
  order: 5;
  width: 28vmax;
  margin-right: 7vmax;
  margin-bottom: 3vmax;
  text-align: right;
  h2 {
    font-size: 1.7vmax;
    color: white;
    margin-bottom: .3vw;
  }
  p {
    color: white;
    font-size: 1.2vw;
    font-weight: 200;
    margin-bottom: 0;
    margin-top: 0;
    border-bottom: solid white thick;
  }
  h1 {
    color: white;
    font-style: oblique;
    margin-top: 0;
  }
}



.Contact {
  order: 4;
  width: 25vmax;
  height: 14.9vmax;
  margin-right: 8vmax;
  margin-left: 4vmax;
  margin-bottom: 3vmax;
  text-align: center;
  background-color: rgba(220,220,220,.85);
  // border: solid blue thick;
  border-radius: 10px;
  h2 {
    margin-top: 5px;
    margin-bottom: 0;
    font-size: 2vmax;
    font-weight: bold;
  }
  p {
    margin-bottom:0;
    font-size: .95vw;
  }
  input {
    background: transparent;
    border: none;
    border-bottom: 1px solid #000000;
    text-align: center;
    font-size: 1.5vmax;
    width: 9vmax;
    margin-left: 10px;
    margin-bottom: .3vw;
    padding-top: .6vw;
    padding-bottom: .6vw;
  }
  select {
    background: transparent;
    border: none;
    border-bottom: 1px solid #000000;
    text-align: center;
    font-size: 1.5vmax;
    width: 6vmax;
    margin-left: 10px;
    margin-bottom: .3vw;
  }
  button {
    color: white;
    font-size: 1.8vmax;
    font-weight: bold;
    border-radius: 6px;
    background-color: $blue;
    width: 24vmax;
    height: 2.7vmax;
    margin-bottom: 0;
  }
  button:hover {
    color: white;
    background-color: $blue-hover;

  }
}

.Form {
  // order: 4;
  width: 25vmax;
  height: 8.5vmax;
  margin-right: 8vmax;
  margin-left: 4vmax;
  margin-bottom: 3vmax;
  text-align: center;
  background-color: rgba(220,220,220,.85);
  // border: solid blue thick;
  border-radius: 5px;
  h2 {
    margin-top: 5px;
    margin-bottom: 0;
    font-size: 2vmax;
    font-weight: bold;
  }
  p {
    margin-bottom:0;
    font-size: .95vw;
  }
  input {
    background: transparent;
    border: none;
    border-bottom: 1px solid #000000;
    text-align: center;
    font-size: 1.5vmax;
    width: 9vmax;
    margin-left: 10px;
    margin-bottom: .3vw;
    padding-top: .6vw;
    padding-bottom: .6vw;
  }
  select {
    background: transparent;
    border: none;
    border-bottom: 1px solid #000000;
    text-align: center;
    font-size: 1.5vmax;
    width: 6vmax;
    margin-left: 10px;
    margin-bottom: .3vw;
  }
  button {
    color: white;
    font-size: 1.8vmax;
    font-weight: bold;
    border-radius: 6px;
    background-color: $blue;
    width: 24vmax;
    height: 2.7vmax;
    margin-bottom: 0;
  }
  button:hover {
    color: white;
    background-color: $blue-hover;

  }
}

.Header {
  order:1;
  height: 7vmax;
  width: 100vmax;
  background-color: rgba(0,0,0,.8);
  // position: absolute;
  img {
    position: absolute;
    left: 3px;
    height: 5vmax;
    margin-left: 2vmax;
    margin-bottom: 1vmax;
    padding: 1vmax;
  }
  p {
    position: absolute;
    font-family: 'Roboto';
    font-style: normal;
    right: 5px;
    width: 30vmax;
    font-size: .9vmax;
    color: #dcdcdc;
    text-align:right;
    padding-right: 2vmax;
    padding-top: 2vmax;
    a {
      color: #38bcbd;
    }
  }
}

.Feature {
  // background-image: $featuring-background;
  // background-color: blue;
  background-size: cover;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  height: 50vmax;
  justify-content: space-around;
  @media only screen and (max-aspect-ratio: 16/9) {
    // background-image: $mobile-featuring-background;
    background-color: grey;
    align-items: center;
    height: auto;
  }
}
.lazy-feature {
  // background-image: $mobile-featuring-background;
  background-color: green;
  @media screen and (min-width: 800px) {
    // background-image: $featuring-background;
    background-color: grey;
  }
  background-size: cover;
  h1 {
    margin-top: 0;
    font-size: 3vw;
    width: 100vw;
    padding-top: 4vw;
    text-decoration: underline;
    color: white;
    text-align: center;
  }
  @media only screen and (max-aspect-ratio: 16/9) {
    h1 {
      font-size: 7.5vw;
    }
  }
}

//used an @for here to save some time on making a sepperate call for eatch item;


@for $i from 1 through 9 {
  #feature-#{$i} {
    font-family: 'Roboto Slab';
    color: white;
    order: $i;
    width: 20vw;
    margin: 6vw;
    margin-top:0;
    margin-bottom:2vw;
    text-align: center;
    img {
      width: 6vw;
    }
    @media only screen and (max-aspect-ratio: 16/9) {
      width: 53vmax;
      margin: 0;
      font-size: 3vw;
      img {
        width: 18vw;
      }
    }
   }
}

//I had to give the phone image some individual settings since it's so different

// #feature-6 {
//   img {
//     height: 35vw;
//     width: auto;
//   }
//   p {
//     font-size: .8vw;
//   }
//   @media only screen and (max-aspect-ratio: 16/9) {
//     order: 0;
//     img {
//       height: 45vmax;
//     }
//     p {
//       // display:none
//     }
//   }
// }

//The disclaimer which is at the bottom on the mobile version so it's hidden here

// #feature-6 {
//   display: none;
//   font-size: 1.8;
//   @media only screen and (max-aspect-ratio: 16/9) {
//     display: block;
//   }
// }



.Faq {
  background-color: grey;
  background-size: cover;
  height: 45vw;
  h1 {
    margin-top: 0;
    padding-top: 5vw;
    font-size: 3vw;
    text-decoration: underline;
    color: black;
  }
  @media only screen and (max-aspect-ratio: 16/9) {
    // background-image: $mobile-faq-background;
    align-items: center;
    height: auto;
  }
}

.faq-questions {
  width: 40vw;
  margin-left: 10vw;
  a {
    text-decoration: none;
  }
}
.Collapsible {
  // height: 4vmax;
  margin-bottom: 1.5vmax;
}
.Collapsible__trigger {
  font-family: 'Roboto Slab';
  font-size: 1.2vw;
  color: black;
  margin-top:0;
  margin-bottom:0;
  text-align: left;
}
.Collapsible__trigger:before {
  font-family:'FontAwesome';
  font-size: 1.2vw;
  content:"\f13a";
  float: left;
  color: black;
  // border-radius: 50%;
  //Having trouble getting background of icon to within  the icon, it seems to spill out
  //It seems to not be round or the border radius property is not set properly
  // background-color: $blue;
}
.Collapsible__trigger.is-closed:before {
  font-family:'FontAwesome';
  font-size: 1.2vw;
  content:"\f138";
  float: left;
  color: $blue;
  // border-radius: 50%;
  // background-color: black;
}

@for $i from 1 through 7 {
  #faq-#{$i} {
    font-family: 'Roboto Slab';
    font-size: 1.2vw;
    color: black;
    order: $i;
    width: 30vw;
    max-width: inherit;
    margin-top:0;
    margin-bottom:0;
    text-align: left;
  }
  #answer-#{$i} {
    max-width: inherit;
    font-family: 'Roboto Slab';
    font-size: 1vw;
  }
}

//this is where I was able to incorparate another mixin to get the parallax component to work. These mixin are nice especially
//if you are ever going to add more items to the component, you can reuse the mixin

$parallax-perspective : 1 !default;
$parallax-element : "body" !default;
$parallax-ios : true !default;

@mixin parallax-init($perspective : $parallax-perspective, $element : $parallax-element, $parallax-ios : $parallax-ios) {
  @if $element == "body" {
    html, body {
      width: 100%;
      height: 100%;
      margin: 0;
      padding: 0;
      overflow: hidden;
    }
  }
  #{$element} {
    overflow: auto;
    perspective: $perspective * 1px;
    transform-style: preserve-3d;
    @if $parallax-ios == false {
      -webkit-overflow-scrolling: touchl
    }
    &, * {
      transform-style: preserve-3d;
    }
  }
}

@mixin parallax($distance : 0, $perspective : $parallax-perspective) {
  transform: translateZ($distance * $perspective * 1px) scale(abs($distance - 1));
  z-index: $distance * 1000;
}

@include parallax-init;
// @include parallax-init;



.How {
  // @include parallax-init();
  // background-image: $about-background;
  background-color: darkblue;
  // @media screen and (min-width: 800px) {
  //   background-image: $mobile-about-background;
  // }
  background-size: cover;
  height: 30vw;
  position: relative;
  h1 {
    @include parallax(.1);
    font-size: 3vw;
    padding-top: 4vw;
    vertical-align: middle;
    margin : auto;
    position : absolute;
    top:3vw;
    bottom:0;
    left:0;
    right:0;
    text-decoration: underline;
    color: $blue;
    text-align: center;
  }
  p {
    @include parallax(.2);
    width: 75vw;
    color: white;
    text-align: center;
    font-size: 1.5vw;
    font-family: 'Roboto Slab';
    font-weight: lighter;
    margin : auto;
    position : absolute;
    top:12vw;
    bottom:0;
    left:0;
    right:0;
  }
}

.Footer {
  order:1;
  height: 7vmax;
  width: 100vmax;
  background-color: $blue;
  img {
    left: 5px;
    position: absolute;
    height: 5vmax;
    margin-left: 5vmax;
    margin-bottom: 0;
    padding: 1vmax;
  }
  p {
    font-family: 'Roboto';
    font-style: normal;
    right: 0;
    width: 30vmax;
    font-size: .8vw;
    color: black;
    position: absolute;
    text-align:right;
    padding-right: 2vmax;
    a {
      color: #38bcbd;
    }
  }
}

@media only screen and (max-aspect-ratio: 16/9) {
  .Dialword {
    display: none;
  }
  .Header {
    height: 35vmax;
    position: relative;
    background-color: black;
    opacity: .90;
    img {
      vertical-align: middle;
      margin : auto;
      position : absolute;
      top:0;
      bottom:0;
      left:0;
      right:0;
      bottom: 0;
      width: 25vmax;
      height: 15vmax;
    }
    p {
      vertical-align: middle;
      margin : auto;
      margin-bottom:5vw;
      position : absolute;
      top:25vw;
      bottom:0;
      left:0;
      right:0;
      width: 74vmax;
      font-size: 3.5vmax;
      text-align: center;
    }
  }
  .Footer {
    height: 65vmax;
    width: 100vw;
    position: relative;
    background-color: $blue;
    margin-top: 10vw;
    img {
      vertical-align: middle;
      margin: auto;
      margin-top: 5vw;
      position: absolute;
      top: 0;
      bottom: 60vw;
      left: 0;
      right: 0;
      bottom: 0;
      width: 25vmax;
      height: 15vmax;
    }
    p {
      vertical-align: middle;
      margin: auto;
      margin-bottom:5vw;
      position: absolute;
      top: 40vw;
      bottom: 0;
      left:0;
      right:0;
      width: 54vmax;
      font-size: 3vmax;
      text-align: center;
    }
  }
  .Dialword_mobile_code {
    height: 50vmax;
  }
  .Dialword-Mobile {
    display: flex;
    vertical-align: middle;
    margin: auto;
    flex-direction: column;
  }
  .Learn-Heading {
    vertical-align: middle;
    margin: auto;
    position: relative;
    margin-bottom: 6vw;
    height: 20vmax;
    h1 {
      margin : auto;
      position : relative;
      top:9vw;
      bottom:0;
      left:0;
      right:0;
      vertical-align: middle;
      color: white;
      // width: 45vmax;
      font-size: 6.5vw;
      text-align: center;
    }
    p {
      vertical-align: middle;
      margin : auto;
      position : relative;
      top:12vw;
      bottom:0;
      left:0;
      right:0;
      color: white;
      width: 75vmax;
      font-size: 4vw;
      text-align: center;
    }
  }
  .Data-Content {
    height: 25vmax;
    position: relative;
    margin-top: 5vmax;
    margin-bottom: 10vmax;
    p {
      border-top: solid $blue thick;
      border-top-width: 10px;
      padding-top: 3vw;
      vertical-align: middle;
      margin : auto;
      position : absolute;
      top:3vw;
      bottom:0;
      left:0;
      right:0;
      color: white;
      width: 75vmax;
      font-size: 4vw;
      text-align: center;
    }
  }
  .Data-Content:after {
    font-family:'FontAwesome';
    font-size: 6vw;
    content:"\f054";
    float: right;
    color: white;
  }
  .Data-Content:before {
    font-family:'FontAwesome';
    font-size: 6vw;
    content:"\f053";
    float: left;
    color: white;
  }
  .Header {
    width: 100vw;
  }
  .Form {
    width: 100%;
    height: 45vw;
    margin: 0;
    padding: 0;
    h2 {
      margin-top: 0;
      padding-top: 3vw;
      font-size: 4.5vmax;
    }
    p {
      font-size: 3.2vw;
      color: darken(grey,10);
      font-weight: 300;
    }
    input {
      width: 27vmax;
      height: 6vmax;
      margin-bottom: 2vmax;
      font-size: 2.5vmax;
    }
    button{
      width: 85vw;
      height: 12vw;
      margin-bottom: 3vw;
      font-size: 3.2vmax;
    }
  }
  .Contact {
    width: 100%;
    height: 45vw;
    margin: 0;
    padding: 0;
    h2 {
      margin-top: 0;
      padding-top: 3vw;
      font-size: 4.5vmax;
    }
    p {
      font-size: 3.2vw;
      color: darken(grey,10);
      font-weight: 300;
    }
    input {
      width: 27vmax;
      height: 6vmax;
      margin-bottom: 2vmax;
      font-size: 2.5vmax;
    }
    button{
      width: 85vw;
      height: 12vw;
      margin-bottom: 3vw;
      font-size: 3.2vmax;
    }
  }
  .How {
    // background-image: $mobile-about-background;
    background-color: grey;
    min-height: 1000px;
    h1 {
      font-size: 8vmax;
    }
    p {
      font-size: 5.5vmax;
    }
  }
  .Faq {
    min-height:1200px;
    padding-bottom: 60vw;
  }
  .faq-questions {
    max-width: 80vmax;
    width: 80vmax;
    overflow: scroll;
    vertical-align: middle;
    margin: auto;
    position: relative;
    top:3vw;
    bottom:0;
    left:0;
    right:0;
    padding: 4vmax;
    h1 {
      font-size: 8vw;
      text-align: center;
      // line-height: 6vmax;
      margin: 3vmax;
    }
  }
  .Collapsible {
    vertical-align: middle;
    width: 85vmax;
    // margin: 3vmax;
    max-width: inherit;
    // overflow: hidden;
    span {
      max-width: inherit;
      font-size: 3.5vw;
      padding: 2vw;
    }
  }
  .Collapsible__contentOuter {
    margin: 3vmax;
    max-width: inherit;
    li {
      max-width: inherit;
      font-size: 3vw;
      padding: 1.5vw;
    }
  }
  span.Collapsible__trigger {
    max-width: 75vmax;
    // overflow: hidden;
  }
  .Collapsible__trigger.is-closed:before {
    font-size: 3vw;

  }
  .Collapsible__trigger:before {
    font-size: 3vw;
  }
}

//This is kind of my hack version of a carousel, I looked at using another carousel but it seemed a little overkill
//I also wonder if it would be ok to incorporate a carousel from bootstrap framework.
//My only regret here would be putting the on click on the entire paragraph element on the bottom and again not having
// the exact icons but I was again able to use fontAwesome icons that look similar.
//I would  incorporate a more traditional carousel here for sure if there were more items to shift through
//but since we only needed to switch between two items I simply put them facing opposite directions then
//then I flip the card by puttng a class on the element in an onClick funciton found in the DialwordMobile component.


.card {
	-webkit-transition: -webkit-transform .5s;
	-moz-transition: -moz-transform .5s;
	-o-transition: -o-transform .5s;
	transition: transform .5s;
	-webkit-transform-style: preserve-3d;
	-moz-transform-style: preserve-3d;
	-o-transform-style: preserve-3d;
	transform-style: preserve-3d;
	position: relative;
  width: 100vw;
  height: auto;
}

/* hide back of pane during swap */
.front, .back {
	-webkit-backface-visibility: hidden;
	-moz-backface-visibility: hidden;
	-o-backface-visibility: hidden;
	backface-visibility: hidden;
	position: absolute;
  // background-image: $mobile-data-background;
  background-color: grey;
  background-size: cover;
  // border: solid thick green;
	// background-color: black;
	box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.14);
  width: 100vw;
}

/* front pane, placed above back */
.front {
	z-index: 2;
  // background-image: $mobile-code-background;
  background-color: grey;
  // border: solid thick red;

}

/* back, initially hidden pane */
.back {
	-webkit-transform: rotateY(180deg);
	-moz-transform: rotateY(180deg);
	-o-transform: rotateY(180deg);
	transform: rotateY(180deg);
	z-index: 3;
}

.card-container {
	-webkit-perspective: 800px;
	-moz-perspective: 800px;
	-o-perspective: 800px;
	perspective: 800px;
	margin-bottom: 30px;
  z-index: 0;
  // border: thick purple solid;
  height: 57vw;
}
/* flip the pane when hovered */
.card-container.flip {
	-webkit-transform: rotateY(180deg);
	-moz-transform: rotateY(180deg);
	-o-transform: rotateY(180deg);
	transform: rotateY(180deg);
}


// .Form {
//   width: 100%;
//   height: 45vw;
//   margin: 0;
//   padding: 0;
//   h2 {
//     margin-top: 0;
//     padding-top: 3vw;
//     font-size: 4.5vmax;
//   }
//   p {
//     font-size: 3.2vw;
//     color: darken(grey,10);
//     font-weight: 300;
//   }
//   input {
//     width: 27vmax;
//     height: 6vmax;
//     margin-bottom: 2vmax;
//     font-size: 2.5vmax;
//   }
//   button{
//     width: 85vw;
//     height: 12vw;
//     margin-bottom: 3vw;
//     font-size: 3.2vmax;
//   }
// }

// @mixin cycleBackground($time,$background-array){
//   @for $i from 0 to $background-array.length {
//
//   }
// }

// .zero {
//   // @include carousel-animation(  $frames: 5, $static: 17.5%, $animation-name: "carousel_1");
//   height: 700px;
//   border: solid green thick;
// }
// @include carousel-animation(2, 17.5%, 'carousel_1')
